/*
 * TransCoderControl.java - The controller class which responds to events
 * generated by a TransCoderView object. For use in the TransCoder plugin
 * for jEdit.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
*/

package edu.unc.epidoc.transcoder.jEdit;

import edu.unc.epidoc.transcoder.*; 
import java.awt.event.*;
import javax.swing.*;
import org.gjt.sp.jedit.*;

import org.gjt.sp.jedit.textarea.JEditTextArea;
import org.gjt.sp.util.Log;

import java.io.*;

/**
*	The class is designed for use with jEdit.  It responds to events
*   generated by the view object, TransCoderView, and runs the Greek
*   conversions.
*
*   @author Michael Jones
*/
public class TransCoderControl implements ActionListener, ItemListener {
	private TransCoderView myView;
	private View jeditView = null;

	private String source;
	private String destination;
	private String result;

	private TransCoder tc;

	//Constructors
	public TransCoderControl() {
		super();
		source = "BetaCode";
		destination = "BetaCode";
		result = "";
		initialize();
	}

	/**
	 * Establish the jEdit view for which this object was created.
	 * @param vw The current jEdit view.
	 */
	public void setJeditView(View vw) {
		jeditView = vw;
	}

	//Implementors
	/**
	 * Perform any required initialization of the TransCoderControl object.
	 * Create the view object.
	 */
	private void initialize() {
		myView = new TransCoderView(this);
		myView.pack();
	}

	/**
	 * Display the TransCoderView object.
	 */
	public void displayView() {
		myView.setVisible(true);
	}

	/**
	 * Executes the conversion of the Greek when the user presses 'Transform'.
	 * @param evt The ActionEvent generated by the button press.
	 */
	public void actionPerformed(ActionEvent evt) {
		String btnPressed = ((JButton)evt.getSource()).getActionCommand();

		if (btnPressed.equals("Text")) {
			try {
				tc = new TransCoder(source, destination);
				result = tc.getString(myView.greekText.getText());
			}
			catch (Exception e) {
			}
			myView.greekText.setText(result);
		}
		else {
			JEditTextArea textArea = jeditView.getTextArea();
			try	{
				tc = new TransCoder(source, destination);
				result = tc.getString(textArea.getText());
			}
			catch (Exception e)	{
			}
			textArea.setText(result);
		}
	}
	/**
	 * Respond to the selection of one of the encoding in the JComboBox.
	 * @param evt The ItemEvent generated by the selection.
	 */
	public void itemStateChanged(ItemEvent e) {
		if (e.getSource() == myView.sourceList)
			source = myView.sourceList.getSelectedItem().toString();
		else
			destination = myView.destinationList.getSelectedItem().toString();
	}
}